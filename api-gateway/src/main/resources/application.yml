server:
  port: 8080

#Nuevo1
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/


#gateway-service
spring:
  application:
    name: micro-gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: auth-users
          uri: lb://micro-auth-service
          predicates:
          - Path=/route/user/restrict/**, /route/auth/restrict/**, /route/user/status/** , /route/auth/status/**
          filters:
          #- RewritePath=/user/auth/(?<segment>.*), /$\{segment}
          - StripPrefix=1
          - name: AuthRequestFilter
            args:
              message: Request with token [ ${spring.cloud.gateway.routes[0].uri} ]
              preLogger: true
              postLogger: true
        - id: auth-login
          uri: lb://micro-auth-service
          predicates:
          - Path=/route/auth/open/**
          filters:
          - StripPrefix=1
          - name: AuthRequestFilter
            args:
              message: Global request [ ${spring.cloud.gateway.routes[1].uri} ]
              preLogger: false
              postLogger: true
        - id: book
          uri: lb://micro-book-service
          predicates:
          - Path=/route/book/restrict/**
          filters:
          - StripPrefix=1
          - name: AuthRequestFilter
            args:
              message: Request with token [ ${spring.cloud.gateway.routes[2].uri} ]
              preLogger: true
              postLogger: true
        - id: catalog-open
          uri: lb://micro-catalog-service
          predicates:
            - Path=/route/catalog/open/**
          filters:
            - StripPrefix=1
            - name: AuthRequestFilter
              args:
                message: Request with token [ ${spring.cloud.gateway.routes[3].uri} ]
                preLogger: false
                postLogger: true
        - id: catalog-restrict
          uri: lb://micro-catalog-service
          predicates:
            - Path=/route/status/**
          filters:
            - StripPrefix=1
            - name: AuthRequestFilter
              args:
                message: Request with token [ ${spring.cloud.gateway.routes[4].uri} ]
                preLogger: true
                postLogger: true
        - id: order
          uri: lb://micro-order-service
          predicates:
            - Path=/route/order/restrict/** , /route/order/status/**
          filters:
            - StripPrefix=1
            - name: AuthRequestFilter
              args:
                message: Request with token [ ${spring.cloud.gateway.routes[5].uri} ]
                preLogger: true
                postLogger: true